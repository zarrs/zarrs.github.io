import{a as u,b as i,o as p,w as l,g as e,e as c,ad as t,v as d,x as m,T as r}from"./modules/vue-DgPOR5la.js";import{I as f}from"./slidev/default-D_R1tYT3.js";import{u as x,f as g}from"./slidev/context-BTwdl0_I.js";import"./index-Teamus1E.js";import"./modules/shiki-Dubhsq5u.js";const V={__name:"slides.md__slidev_5",setup(_){const{$clicksContext:n,$frontmatter:s}=x();return n.setup(),(b,o)=>{const a=u("tt");return p(),i(f,d(m(r(g)(r(s),4))),{default:l(()=>[e("h1",null,[c(a,null,{default:l(()=>[...o[0]||(o[0]=[t("zar",-1),e("u",null,"rs",-1)])]),_:1}),o[1]||(o[1]=t(": Core Features",-1))]),o[2]||(o[2]=e("ul",null,[e("li",null,"Full support for the latest Zarr V3.1 specification + a compatible subset of Zarr V2"),e("li",null,"High performance and low memory usage"),e("li",null,"Support for asynchronous cloud storage backends"),e("li",null,[t("Highly extensible: create your own stores, codecs, data types, chunk grids, etc. "),e("ul",null,[e("li",null,"Extensive inbuilt extension support")])]),e("li",null,"C / C++ FFI bindings"),e("li",null,[t("A high-performance codec pipeline for the "),e("code",null,"zarr"),t(" Python reference implementation")]),e("li",null,[e("code",null,"icechunk"),t(" store + "),e("code",null,"virtualizarr"),t(" support")])],-1))]),_:1},16)}}};export{V as default};
